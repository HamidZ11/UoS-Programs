Homework 4 is based off of homework 3, making home work 3 more advanced from the brief given

Summary:
This project models the shopping process in a private members-only grocery store, extending previous functionality to allow multiple items in a shopping basket. The code focuses on improving user interaction with the store, managing items, and handling transactions.

Key Features:

Shopping Basket Management:
	Members can select multiple items using an ArrayList.
	Items can be added, removed, or cleared from the basket.

Checkout Process:
	Calculates the total cost of all items in the basket.
	Ensures sufficient funds before completing the purchase.
	Handles change calculation and basket clearing after checkout.

Error Handling:
	Provides error messages for invalid inputs or actions (e.g., insufficient funds, invalid 	basket size).

Additional Functionality:
	Allows members to "put back" items based on position, name, or price.
	Implements a maximum basket size restriction in the store.

Code Refinement:
	Includes toString() for item details and refactors price formatting for consistency.
	Uses loops to iterate over baskets for showing items and calculating costs.


This project applies concepts from object-oriented programming (OOP), such as encapsulation, polymorphism (method overloading), and error handling, to simulate a real-world shopping system.